spring.application.name=health-api
# 1. Configuração da Fonte de Dados (Datasource)
# Define o driver de conexão com o H2.
spring.datasource.driver-class-name=org.h2.Driver

# Define a URL de conexão.
# jdbc:h2:mem:testdb
# - jdbc:h2: Protocolo do H2
# - mem: Indica que o banco será em memória (os dados serão perdidos ao reiniciar)
# - testdb: O nome do banco de dados
spring.datasource.url=jdbc:h2:mem:testdb

# Define as credenciais de acesso (geralmente não são necessárias para testes)
spring.datasource.username=sa
spring.datasource.password=
# 2. Configuração do JPA/Hibernate
# O dialeto é o "tradutor" que o Hibernate usa para gerar SQL para o H2.
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# ddl-auto: Define como o Hibernate deve interagir com o schema do banco.
# - create-drop: Cria o schema e destroi-o ao fechar a aplicação (ideal para testes/memória).
# - update: Tenta aplicar as mudanças sem destruir o que existe (para desenvolvimento).
# - validate: Apenas verifica se o schema do banco corresponde às entidades.
spring.jpa.hibernate.ddl-auto=create-drop

# Opcional: Mostra as queries SQL geradas pelo Hibernate no console.
spring.jpa.show-sql=true

# 3. Configuração do Console do H2
# Habilita o console web do H2 para que você possa visualizá-lo no navegador.
spring.h2.console.enabled=true

# Define o caminho (path) para acessar o console (http://localhost:8080/h2-console)
spring.h2.console.path=/h2-console